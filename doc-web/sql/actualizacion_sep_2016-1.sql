ALTER TABLE prestamo ADD ESTADO_TMP VARCHAR2(50);

delete from PROCESO_INSTANCIA;
delete from DOCUMENTO_ADJUNTO;
delete from DOCUMENTO_DEPENDENCIA;
delete from documento_obs;
delete from PRESTAMO_SOLICITUD;
delete from prestamo;
delete from documento_prestamo;
delete from documento;

delete from DOCUMENTO_USU_APRUEBA;
delete from DOCUMENTO_USU_ELABORA;
delete from DOCUMENTO_USU_FIRMA;
delete from DOCUMENTO_USU_VISTOS_BUENOS;

update rol set activo = 0 where rol_id in ('ADMIN_BANDEJAS','ADMIN_DESTINATARIOS','ADMIN_TIPOS_DESTINATARIO');

update proceso set activo = 0 where pro_id = 42;
delete from plantilla where pla_id in (41,141,161,101,162,163,164,165);

Insert into PLANTILLA (PLA_ID,PLA_CODIGO,ACTIVO,QUIEN,CUANDO,QUIEN_MOD,CUANDO_MOD,PLA_TIPO,PLA_NOMBRE,PLA_ARCHIVO) values ('121','Plantilla Word','1','121',to_date('29/06/16','DD/MM/RR'),'121',to_date('29/06/16','DD/MM/RR'),'WORD',null,null);
Insert into PLANTILLA (PLA_ID,PLA_CODIGO,ACTIVO,QUIEN,CUANDO,QUIEN_MOD,CUANDO_MOD,PLA_TIPO,PLA_NOMBRE,PLA_ARCHIVO) values ('1','Radiograma','1','121',to_date('29/06/16','DD/MM/RR'),'121',to_date('29/06/16','DD/MM/RR'),'PDF',null,null);
Insert into PLANTILLA (PLA_ID,PLA_CODIGO,ACTIVO,QUIEN,CUANDO,QUIEN_MOD,CUANDO_MOD,PLA_TIPO,PLA_NOMBRE,PLA_ARCHIVO) values ('2','Oficio','1','121',to_date('29/06/16','DD/MM/RR'),'121',to_date('29/06/16','DD/MM/RR'),'PDF',null,null);
Insert into PLANTILLA (PLA_ID,PLA_CODIGO,ACTIVO,QUIEN,CUANDO,QUIEN_MOD,CUANDO_MOD,PLA_TIPO,PLA_NOMBRE,PLA_ARCHIVO) values ('61','--SIN PLANTILLA--','0','1121',to_date('29/06/16','DD/MM/RR'),'121',to_date('29/06/16','DD/MM/RR'),null,null,null);

--select index_name,index_type,status,domidx_status,domidx_opstatus from user_indexes where index_type like '%DOMAIN%' and (domidx_status <> 'VALID' or domidx_opstatus <> 'VALID');
CREATE TABLE TMP_ARBOL_DEPEN( 
DOC_ID	VARCHAR2(32), 
FECHA TIMESTAMP, 
VALOR VARCHAR2(32));

CREATE TABLE errors (
      doc_id    NUMBER,
      code      NUMBER,      
      message   VARCHAR2(4000),
      happened  TIMESTAMP);
 

alter table DOCUMENTO ADD PDF_TEXTO1 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO2 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO3 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO4 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO5 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO6 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO6_2 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO7 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO8 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO9 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO10 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO11 CLOB;
alter table DOCUMENTO ADD PDF_TEXTO12 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO13 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO14 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO15 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO16 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO17 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO18 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO19 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO20 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO21 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO22 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO23 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO24 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO25 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO26 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO27 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO28 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO29 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO30 VARCHAR2(4000);

create or replace PROCEDURE PROC_PDF_ARBOL_DEPENDE 
(
  P_DOC_ID IN DOCUMENTO.DOC_ID%TYPE,   
  P_DEP_ID IN DEPENDENCIA.DEP_ID%TYPE
) IS
  V_DEP_PADRE DEPENDENCIA.DEP_PADRE%TYPE;
  V_DEP_SIGLA DEPENDENCIA.DEP_SIGLA%TYPE;
BEGIN
  
  IF P_DEP_ID IS NOT NULL THEN
  
    SELECT DEP_PADRE INTO V_DEP_PADRE FROM DEPENDENCIA WHERE DEP_ID = P_DEP_ID;
    SELECT DEP_SIGLA INTO V_DEP_SIGLA FROM DEPENDENCIA WHERE DEP_ID = P_DEP_ID;      
    
    IF V_DEP_SIGLA IS NOT NULL THEN   
      INSERT INTO TMP_ARBOL_DEPEN VALUES (P_DOC_ID,CURRENT_TIMESTAMP,V_DEP_SIGLA);
    END IF;  
      
    IF V_DEP_PADRE IS NOT NULL THEN      
      PROC_PDF_ARBOL_DEPENDE( P_DOC_ID, V_DEP_PADRE );
    END IF;    
  END IF;
  
END PROC_PDF_ARBOL_DEPENDE;

create or replace FUNCTION FN_PDF_GET_SIGLA 
(
  P_DOC_ID IN VARCHAR2,
  P_TIPO_SALIDA IN VARCHAR2 
) RETURN VARCHAR2 IS
  SALIDA VARCHAR2(500) := '';
BEGIN
  
  IF P_TIPO_SALIDA = 'RECURSIVO_ARRIBA_ABAJO' THEN
    FOR rec IN (SELECT VALOR FROM TMP_ARBOL_DEPEN WHERE DOC_ID = P_DOC_ID ORDER BY FECHA DESC)
       LOOP
          SALIDA := ( SALIDA || rec.VALOR || '-' );
       END LOOP;    
  ELSIF P_TIPO_SALIDA = 'RECURSIVO_ABAJO_ARRIBA' THEN
    FOR rec IN (SELECT VALOR FROM TMP_ARBOL_DEPEN WHERE DOC_ID = P_DOC_ID ORDER BY FECHA ASC)
       LOOP
          SALIDA := ( SALIDA || rec.VALOR || '-' );
       END LOOP;         
  ELSIF P_TIPO_SALIDA = 'PRIMERO' THEN
      FOR rec IN (SELECT VALOR FROM TMP_ARBOL_DEPEN WHERE DOC_ID = P_DOC_ID ORDER BY FECHA DESC)
       LOOP
          SALIDA := rec.VALOR;
       END LOOP; 
  ELSIF P_TIPO_SALIDA = 'ULTIMO' THEN
      FOR rec IN (SELECT VALOR FROM TMP_ARBOL_DEPEN WHERE DOC_ID = P_DOC_ID ORDER BY FECHA ASC)
       LOOP
          SALIDA := rec.VALOR;
       END LOOP;     
  END IF;
    
  RETURN SALIDA;
  
END FN_PDF_GET_SIGLA;




create or replace FUNCTION FN_PDF_RADIOGRAMA_MAIN
(
  P_DOC_ID IN DOCUMENTO.DOC_ID%TYPE    
)
RETURN VARCHAR2 is
  v_code                    NUMBER;
  v_errm                    VARCHAR2(4000);
  v_documento               DOCUMENTO%ROWTYPE;
  --v_clasificacion         CLASIFICACION%ROWTYPE;  
  V_CLASIFICACION_NOMBRE    CLASIFICACION.CLA_NOMBRE%TYPE;
  V_DEP_ID_ELABORA          USUARIO.DEP_ID%TYPE;
  V_SIGLA_CORTA_DE          VARCHAR2(50);
  V_SIGLA_CORTA_PARA        VARCHAR2(50);
  V_SIGLA_LARGA_DE          VARCHAR2(50);
  V_USU_ID_FIRMA            DOCUMENTO.USU_ID_FIRMA%TYPE;
  V_USU_GRADO_FIRMA         USUARIO.USU_GRADO%TYPE;
  V_USU_NOMBRE_FIRMA        USUARIO.USU_NOMBRE%TYPE;
  V_USU_CARGO_FIRMA         USUARIO.USU_CARGO%TYPE;
  V_USU_ID_ELABORA          DOCUMENTO.USU_ID_ELABORA%TYPE;
  V_USU_GRADO_ELABORA       USUARIO.USU_GRADO%TYPE;
  V_USU_NOMBRE_ELABORA      USUARIO.USU_NOMBRE%TYPE;
  V_USU_CARGO_ELABORA       USUARIO.USU_CARGO%TYPE;
  V_USU_ID_REVISA           DOCUMENTO.USU_ID_ELABORA%TYPE;
  V_USU_GRADO_REVISA        USUARIO.USU_GRADO%TYPE;
  V_USU_NOMBRE_REVISA       USUARIO.USU_NOMBRE%TYPE;
  V_USU_CARGO_REVISA        USUARIO.USU_CARGO%TYPE;
  V_TRD_CODIGO              TRD.TRD_CODIGO%TYPE;
  V_CONTENIDO_PARTE1        VARCHAR(4000);
  --V_CONTENIDO_PARTE2      VARCHAR(4000);
  V_PADRE_ORIGEN            VARCHAR(10);
  V_DEPENCIAS_ARRIBA_ABAJO  VARCHAR(500);
  V_DIRECCION               VARCHAR(500); 
  V_ARCHIVOS                VARCHAR(1000);
  V_PRO_ID                  PROCESO_INSTANCIA.PRO_ID%TYPE;  
  
BEGIN
    DBMS_OUTPUT.PUT_LINE('Inicio proceso main');
    DELETE FROM TMP_ARBOL_DEPEN WHERE DOC_ID = P_DOC_ID;
    DBMS_OUTPUT.PUT_LINE('Borrando en: TMP_ARBOL_DEPEN');
    
    SELECT * INTO v_documento FROM DOCUMENTO WHERE DOC_ID = P_DOC_ID;
    DBMS_OUTPUT.PUT_LINE('Consulto OK documento');
    
    SELECT PRO_ID INTO V_PRO_ID FROM PROCESO_INSTANCIA pi INNER JOIN DOCUMENTO doc ON pi.PIN_ID=doc.PIN_ID WHERE doc.DOC_ID=P_DOC_ID;
    DBMS_OUTPUT.PUT_LINE('Consulta OK PROCESO_INSTANCIA.PRO_ID : ' || V_PRO_ID);
    
    IF V_PRO_ID = 8 THEN 
      SELECT CLA_NOMBRE INTO V_CLASIFICACION_NOMBRE FROM CLASIFICACION WHERE CLA_ID = v_documento.CLA_ID;
      DBMS_OUTPUT.PUT_LINE('Consulta OK CLASIFICACION.CLA_NOMBRE : ' || V_CLASIFICACION_NOMBRE);
    END IF;
    
    --CONSULTAMOS EL USUARIO QUIEN ELABORA EL DOCUMENTO   
   SELECT USU_ID_ELABORA INTO V_USU_ID_ELABORA FROM DOCUMENTO WHERE DOC_ID = P_DOC_ID;   
   DBMS_OUTPUT.PUT_LINE('Consulta OK DOCUMENTO.USU_ID_ELABORA : '|| V_USU_ID_ELABORA);
   
   SELECT USU_GRADO INTO V_USU_GRADO_ELABORA FROM USUARIO WHERE USU_ID = V_USU_ID_ELABORA; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK DOCUMENTO.USU_ID_ELABORA : '|| V_USU_ID_ELABORA);
   
   SELECT USU_NOMBRE INTO V_USU_NOMBRE_ELABORA FROM USUARIO WHERE USU_ID = V_USU_ID_ELABORA; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK DOCUMENTO.USU_ID_ELABORA : '|| V_USU_ID_ELABORA);
   
   SELECT USU_CARGO INTO V_USU_CARGO_ELABORA FROM USUARIO WHERE USU_ID = V_USU_ID_ELABORA; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK USUARIO.USU_CARGO : '|| V_USU_CARGO_ELABORA);
   
   --CONSULTAMOS LA DEPENDENCIA DEL USUARIO
   SELECT DEP_ID INTO V_DEP_ID_ELABORA FROM USUARIO WHERE USU_ID = V_USU_ID_ELABORA;   
   DBMS_OUTPUT.PUT_LINE('Consulta OK USUARIO.DEP_ID : '|| V_DEP_ID_ELABORA);
   
   --USUARIO ASIGANDO - QUIEN FIRMA
   SELECT USU_ID_FIRMA INTO V_USU_ID_FIRMA FROM DOCUMENTO WHERE DOC_ID = P_DOC_ID;
   DBMS_OUTPUT.PUT_LINE('Consulta OK DOCUMENTO.USU_ID_FIRMA : '|| V_USU_ID_FIRMA);
   
   SELECT USU_GRADO INTO V_USU_GRADO_FIRMA FROM USUARIO WHERE USU_ID = V_USU_ID_FIRMA; 
   SELECT USU_NOMBRE INTO V_USU_NOMBRE_FIRMA FROM USUARIO WHERE USU_ID = V_USU_ID_FIRMA; 
   SELECT USU_CARGO INTO V_USU_CARGO_FIRMA FROM USUARIO WHERE USU_ID = V_USU_ID_FIRMA; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK FIRMA USUARIO.USU_GRADO : '|| V_USU_GRADO_FIRMA);
   DBMS_OUTPUT.PUT_LINE('Consulta OK FIRMA USUARIO.USU_NOMBRE : '|| V_USU_NOMBRE_FIRMA);
   DBMS_OUTPUT.PUT_LINE('Consulta OK FIRMA USUARIO.USU_CARGO : '|| V_USU_CARGO_FIRMA);
   
   --CONSULTAMOS EL USUARIO QUIEN REVISA EL DOCUMENTO   
   SELECT USU_ID_VISTO_BUENO INTO V_USU_ID_REVISA FROM DOCUMENTO WHERE DOC_ID = P_DOC_ID; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK DOCUMENTO.USU_ID_VISTO_BUENO : '|| V_USU_ID_REVISA);
   
   SELECT USU_GRADO INTO V_USU_GRADO_REVISA FROM USUARIO WHERE USU_ID = V_USU_ID_REVISA; 
   SELECT USU_NOMBRE INTO V_USU_NOMBRE_REVISA FROM USUARIO WHERE USU_ID = V_USU_ID_REVISA; 
   SELECT USU_CARGO INTO V_USU_CARGO_REVISA FROM USUARIO WHERE USU_ID = V_USU_ID_REVISA; 
   DBMS_OUTPUT.PUT_LINE('Consulta OK REVISA USUARIO.USU_GRADO : '|| V_USU_GRADO_REVISA);
   DBMS_OUTPUT.PUT_LINE('Consulta OK REVISA USUARIO.USU_NOMBRE : '|| V_USU_NOMBRE_REVISA);
   DBMS_OUTPUT.PUT_LINE('Consulta OK REVISA USUARIO.USU_CARGO : '|| V_USU_CARGO_REVISA);
   
   --CONSULTAMOS LA TRD CODIGO
   SELECT TRD_CODIGO INTO V_TRD_CODIGO FROM TRD WHERE TRD_ID = v_documento.TRD_ID;  
   DBMS_OUTPUT.PUT_LINE('Consulta OK TRD.TRD_CODIGO : '|| V_TRD_CODIGO);
   
    --CARGAR ARBOL
    PROC_PDF_ARBOL_DEPENDE(P_DOC_ID, V_DEP_ID_ELABORA);
    DBMS_OUTPUT.PUT_LINE('Consulta OK PROC_PDF_ARBOL_DEPENDE : ');
   
    V_SIGLA_CORTA_DE := FN_PDF_GET_SIGLA( P_DOC_ID, 'ULTIMO' );
    DBMS_OUTPUT.PUT_LINE('Consulta OK FN_PDF_GET_SIGLA : ' || V_SIGLA_CORTA_DE);
    
    IF v_documento.DEP_ID_DES IS NOT NULL THEN
      SELECT DEP_SIGLA INTO V_SIGLA_CORTA_PARA FROM DEPENDENCIA WHERE DEP_ID = v_documento.DEP_ID_DES;   
      DBMS_OUTPUT.PUT_LINE('Consulta OK DEPENDENCIA.DEP_SIGLA : ' || V_SIGLA_CORTA_PARA);
    END IF;    
    
    V_DEPENCIAS_ARRIBA_ABAJO := FN_PDF_GET_SIGLA( P_DOC_ID, 'RECURSIVO_ARRIBA_ABAJO' );
    
    IF V_SIGLA_CORTA_DE = 'CAIMI' THEN
      V_SIGLA_LARGA_DE := 'COMANDO DE APOYO DE COMBATE DE INTELIGENCIA MILITAR';
      V_PADRE_ORIGEN := 'JEMOP';
      V_DIRECCION := '<p>Patria, Honor, Lealtad<br />&quot;Dios en todas nuestras actuaciones&quot;<br />Fe en la causa<br />Carrera 8 a No. 101 - 33<br />Conmutador 6004900 Extensión 2080, Fax 6004901<br />Cob.caimi@imi.mil.co';
    ELSIF V_SIGLA_CORTA_DE = 'CACIM' THEN
      V_SIGLA_LARGA_DE := 'COMANDO DE APOYO DE COMBATE DE CONTRAINTELIGENCIA MILITAR';
      V_PADRE_ORIGEN := 'JEMOP';
      V_DIRECCION := '<p>Patria, Honor, Lealtad<br />&quot;Dios en todas nuestras actuaciones&quot;<br />Fe en la causa<br />Carrera 8 a No. 101 - 33<br />Conmutador 6004900 Extensión 2080, Fax 6004901<br />jecim@ejercito.mil.co';
    ELSIF V_SIGLA_CORTA_DE = 'CEDE2' THEN
      V_SIGLA_LARGA_DE := 'DEPARTAMENTO DE INTELIGENCIA Y CONTRAINTELIGENCIA';
      V_PADRE_ORIGEN := 'JEMPP';
      V_DIRECCION := '<p>Patria, Honor, Lealtad<br />&quot;Dios en todas nuestras actuaciones&quot;<br />Fe en la causa<br />Entrada Principal Carrera 54 No 26-25, Oficina 304<br />Conmutador 2209200 MK 0117212<br />Criptografía.E2@imi.mil.co';
    ELSE 
      V_SIGLA_LARGA_DE := '-';
      V_PADRE_ORIGEN := '';
    END IF; 
    
     
  V_CONTENIDO_PARTE1 := 'No. ' || v_documento.DOC_RADICADO || ' /MDN-CGFM-COEJC-SECEJ-' || V_PADRE_ORIGEN || '-' || V_DEPENCIAS_ARRIBA_ABAJO;
  --V_CONTENIDO_PARTE2 := V_TRD_CODIGO || 'X ' || TO_CHAR(v_documento.DOC_CONTENIDO) || 'X (' || V_USU_GRADO_FIRMA || ' ' || V_USU_NOMBRE_FIRMA || ' ' || V_USU_CARGO_FIRMA || ')';
    
    FOR rec IN (SELECT DAD_ORIGINAL FROM DOCUMENTO_ADJUNTO WHERE DOC_ID = P_DOC_ID) LOOP
        V_ARCHIVOS := ( V_ARCHIVOS || rec.DAD_ORIGINAL || ',' );
    END LOOP;
    
    UPDATE 
      DOCUMENTO 
    SET
      PDF_TEXTO1 = V_CLASIFICACION_NOMBRE,
      PDF_TEXTO2 = V_SIGLA_LARGA_DE,
      PDF_TEXTO3 = v_documento.DOC_RADICADO,
      PDF_TEXTO4 = REPLACE(v_documento.DOC_RADICADO,'-',''),
      PDF_TEXTO5 = TO_CHAR(sysdate,'DD') || ' de ' || INITCAP(TO_CHAR(sysdate,'MONTH','nls_date_language=SPANISH')) || ' de ' || TO_CHAR(sysdate,'YYYY'),
      PDF_TEXTO6 = V_SIGLA_CORTA_DE,
      PDF_TEXTO6_2 = V_SIGLA_CORTA_PARA,
      PDF_TEXTO7 = 'RADIOGRAMA',
      PDF_TEXTO8 = '<b>' || V_CONTENIDO_PARTE1 || V_TRD_CODIGO || '</b>',
      PDF_TEXTO9 = V_CONTENIDO_PARTE1 || v_documento.DOC_RADICADO,
      PDF_TEXTO10 = NULL,--V_CONTENIDO_PARTE2,
      PDF_TEXTO11 = '<b>' || V_CONTENIDO_PARTE1 || V_TRD_CODIGO || '</b>' || 'X ' || TO_CHAR(v_documento.DOC_CONTENIDO) || 'X ' || '<b>' || V_USU_GRADO_FIRMA || ' - ' || V_USU_NOMBRE_FIRMA || ' - ' || V_USU_CARGO_FIRMA || '</b>' || ' Quien firma X',
      PDF_TEXTO12 = V_USU_ID_ELABORA,
      PDF_TEXTO13 = V_USU_GRADO_ELABORA,
      PDF_TEXTO14 = V_USU_NOMBRE_ELABORA,
      PDF_TEXTO15 = V_USU_CARGO_ELABORA,
      PDF_TEXTO16 = V_USU_ID_FIRMA,
      PDF_TEXTO17 = V_USU_GRADO_FIRMA,
      PDF_TEXTO18 = V_USU_NOMBRE_FIRMA,
      PDF_TEXTO19 = V_USU_CARGO_FIRMA,
      PDF_TEXTO20 = V_USU_ID_REVISA,
      PDF_TEXTO21 = V_USU_GRADO_REVISA,
      PDF_TEXTO22 = V_USU_NOMBRE_REVISA,
      PDF_TEXTO23 = V_USU_CARGO_REVISA,
      PDF_TEXTO24 = V_DIRECCION,
      PDF_TEXTO25 = V_ARCHIVOS,
      PDF_TEXTO26 = v_documento.DOC_DEST_NOMBRE,
      PDF_TEXTO27 = v_documento.DOC_DEST_TITULO,
      PDF_TEXTO28 = v_documento.DOC_DEST_DIRECCION,
      PDF_TEXTO29 = v_documento.DOC_ASUNTO
    WHERE DOC_ID = P_DOC_ID;
  
    commit;
    
    RETURN 'OK';
  
  EXCEPTION  
    WHEN OTHERS THEN
      v_code := SQLCODE;
      v_errm := SUBSTR(SQLERRM, 1, 3500);
      DBMS_OUTPUT.PUT_LINE ('Error code ' || v_code || ': ' || v_errm);
      
      --INSERT INTO errors VALUES (P_DOC_ID, v_code, v_errm, SYSTIMESTAMP);
    RETURN 'ERROR: ' || v_code || ', ' || v_errm;
      
END FN_PDF_RADIOGRAMA_MAIN;









create or replace FUNCTION       "FN_DOCUMENTO_RADICADO" (p_dep_id number) return varchar2 as 
  v_ano varchar2(4);
  v_dep varchar2(3);
  v_seq varchar2(21);
  v_dig varchar2(1);
  v_rad varchar2(32);
begin
  
  select to_char(sysdate, 'YYYY') 
    into v_ano 
    from dual;
  
  select dep_codigo
    into v_dep
    from dependencia
   where dep_id = p_dep_id;
  
  select lpad(to_char(DOCUMENTO_RADICADO.nextval), 4, '0')
    into v_seq
    from dual;
  
  v_dig := 2;
  
  v_rad := v_ano || '-' || v_dep || '-' || v_seq || '-' || v_dig;
  
  return v_rad;
end fn_documento_radicado;


























set serveroutput on;
DECLARE 
BEGIN
  DBMS_OUTPUT.PUT_LINE( FN_PDF_RADIOGRAMA_MAIN( '286c9a97d38048a0a41867130eb5310a' ) );
END;



select

clasificacion.CLA_NOMBRE clasificacion,
documento.DOC_ID id_documento,
( select FN_PDF_DESCRIPCION_DEPENDENCIA('CACIM') from dual ) as fn_descripcion_larga_1,
( select FN_PDF_RADIOGRAMA_DE( documento.CLA_ID ) from dual ) as fn_departe,
( select FN_PDF_RADIOGRAMA_PARA( documento.CLA_ID ) from dual ) as fn_para,
documento.DOC_RADICADO documento_radicado_formato,
REPLACE(documento.DOC_RADICADO,'-','') documento_radicado_key

 from documento documento,
      CLASIFICACION clasificacion
where documento.DOC_ID = '555260f5bd034f3ca6c4317a7efe9331'
and clasificacion.CLA_ID = documento.CLA_ID



set serveroutput on;
BEGIN
  FOR i IN 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE(i || '! = ' || factorial(i));
  END LOOP;
END;


set serveroutput on;
BEGIN
  FOR i IN 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE( FN_PDF_ARBOL_DEPENDE_AR_AB(68) );
  END LOOP;
END;














--29-09-2016
alter table PLANTILLA add TEXTO_DEFAULT CLOB;
CREATE TABLE DOCUMENTO_USU_VISTOS_BUENOS( DOC_ID	VARCHAR2(32) NOT NULL, USU_ID_VISTO_BUENO	NUMBER(38,0) NOT NULL, CUANDO TIMESTAMP NOT NULL );
CREATE TABLE DOCUMENTO_USU_ELABORA( DOC_ID	VARCHAR2(32) NOT NULL, USU_ID_ELABORA	NUMBER(38,0) NOT NULL, CUANDO TIMESTAMP NOT NULL );
CREATE TABLE DOCUMENTO_USU_FIRMA( DOC_ID	VARCHAR2(32) NOT NULL, USU_ID_FIRMA	NUMBER(38,0) NOT NULL, CUANDO TIMESTAMP NOT NULL );
CREATE TABLE DOCUMENTO_USU_APRUEBA( DOC_ID	VARCHAR2(32) NOT NULL, USU_ID_APRUEBA	NUMBER(38,0) NOT NULL, CUANDO TIMESTAMP NOT NULL );


create or replace TRIGGER TRG_CAMBIO_ELABORA_DOCUMENTO 
after insert or update of USU_ID_ELABORA on DOCUMENTO 
FOR EACH ROW WHEN (NEW.USU_ID_ELABORA IS NOT NULL)
BEGIN
  INSERT INTO DOCUMENTO_USU_ELABORA (DOC_ID, USU_ID_ELABORA, CUANDO) VALUES ( :NEW.DOC_ID, :NEW.USU_ID_ELABORA, SYSDATE);
END;

create or replace TRIGGER TRG_CAMBIO_USU_VISTO_DOCUMENTO 
after insert or update of USU_ID_VISTO_BUENO on DOCUMENTO 
FOR EACH ROW WHEN (NEW.USU_ID_VISTO_BUENO IS NOT NULL)
BEGIN
  INSERT INTO DOCUMENTO_USU_VISTOS_BUENOS (DOC_ID, USU_ID_VISTO_BUENO, CUANDO) VALUES ( :NEW.DOC_ID, :NEW.USU_ID_VISTO_BUENO, SYSDATE);
END
;

CREATE OR REPLACE TRIGGER TRG_CAMBIO_USU_APRUEB_DOCUMENT 
AFTER INSERT OR UPDATE of USU_ID_APRUEBA on DOCUMENTO 
FOR EACH ROW WHEN (NEW.USU_ID_APRUEBA IS NOT NULL)
BEGIN
  INSERT INTO DOCUMENTO_USU_APRUEBA (DOC_ID, USU_ID_APRUEBA, CUANDO) VALUES ( :NEW.DOC_ID, :NEW.USU_ID_APRUEBA, SYSDATE);
END
;

CREATE OR REPLACE TRIGGER TRG_CAMBIO_USU_APRUEB_DOCUMENT 
AFTER INSERT OR UPDATE of USU_ID_APRUEBA on DOCUMENTO 
FOR EACH ROW WHEN (NEW.USU_ID_APRUEBA IS NOT NULL)
BEGIN
  INSERT INTO DOCUMENTO_USU_APRUEBA (DOC_ID, USU_ID_APRUEBA, CUANDO) VALUES ( :NEW.DOC_ID, :NEW.USU_ID_APRUEBA, SYSDATE);
END
;
ALTER TABLE USUARIO ADD USU_IMAGEN_FIRMA_EXT VARCHAR2(100);
CREATE TABLE USUARIO_HISTORIAL_FIRMA_IMG(ID NUMBER(38,0) NOT NULL, QUIEN_MOD NUMBER(38,0) NOT NULL, USU_ID NUMBER(38,0) NOT NULL, USU_IMAGEN_FIRMA VARCHAR2(32), USU_IMAGEN_FIRMA_EXT	VARCHAR2(100), CUANDO TIMESTAMP NOT NULL, CONSTRAINT "USUARIO_HISTOR_FIRMA_IMG_PK" PRIMARY KEY ("ID") );      
CREATE SEQUENCE USUARIO_HISTORIAL_F_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1;

alter table DOCUMENTO ADD PDF_TEXTO31 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO32 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO33 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO34 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO35 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO36 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO37 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO38 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO39 VARCHAR2(4000);
alter table DOCUMENTO ADD PDF_TEXTO40 VARCHAR2(4000);

   